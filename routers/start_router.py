from datetime import datetime
from middleware.db import DataBase
from aiogram.filters import CommandStart, StateFilter
from aiogram import Router, Bot, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from config_data.site_api import get_user_id, get_account_details, get_referrals
from config_data.config import Config, load_config
from keyboards.reply_kb import authorization_kb
from aiogram.types import Message, FSInputFile
from keyboards.inline_kb import main_kb
import asyncio
from aiogram.types import ReplyKeyboardRemove

config: Config = load_config()
router: Router = Router()
bot: Bot = Bot(config.tg_bot.token, parse_mode='HTML')
db: DataBase = DataBase()


class UserPhone(StatesGroup):
    phone_number: State = State()


@router.message(CommandStart())
async def command_start_ask_phone(message: Message, state: FSMContext):
    photo = FSInputFile(path="photos/partner_program.png")
    await bot.send_photo(
        chat_id=message.from_user.id,
        photo=photo,
        caption="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ.\n–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤ –ü–∞–Ω–µ–ª–∏, –≤–∞–º –Ω—É–∂–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è¬ª, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
        reply_markup=authorization_kb
    )
    await state.set_state(UserPhone.phone_number)
    await asyncio.sleep(45)


@router.message(StateFilter(UserPhone.phone_number), F.contact)
async def command_start(message: Message, state: FSMContext) -> None:
    phone_number = message.contact.phone_number if '+' in message.contact.phone_number else '+' + message.contact.phone_number
    if await get_user_id(phone_number):
        if not db.check_phone_number(phone_number) and not db.check_user_id(phone_number, message.from_user.id):
            db.add_phone_number(phone_number)
            db.update_user_id(phone_number, message.from_user.id)
            db.update_spam_1(phone_number, datetime.now())
            db.update_spam_2(phone_number, db.get_spam_1(phone_number))
            db.update_spam_3(phone_number, db.get_spam_2(phone_number))
        user_id = await get_user_id(phone_number)
        account_details = await get_account_details(user_id)
        if not db.check_client_name(phone_number, account_details['first_name']):
            db.update_client_name(phone_number, account_details['first_name'])
        referrals = await get_referrals(user_id)
        if not db.check_link10(phone_number, referrals['link_10']) and not db.check_link25(
                phone_number, referrals['link_25']):
            db.update_link10(phone_number, referrals['link_10'])
            db.update_link25(phone_number, referrals['link_25'])
        await state.update_data(phone_number=phone_number)
        await bot.send_chat_action(chat_id=message.from_user.id, action='typing')
        await asyncio.sleep(3)

        msg_1 = await bot.send_message(
            chat_id=message.from_user.id,
            text="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –¢–†–ê–î–û.\n\n–°–µ–π—á–∞—Å —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫ —ç—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤ —Ä–∞–±–æ—Ç–µ",
            reply_markup=ReplyKeyboardRemove()
        )
        await bot.send_chat_action(chat_id=message.from_user.id, action='typing')
        await asyncio.sleep(5)
        # await bot.delete_message(chat_id=message.from_user.id, message_id=msg_0.message_id)

        msg_2 = await bot.send_message(
            chat_id=message.from_user.id,
            text='–ö–Ω–æ–ø–∫–∞ "–†–∞–±–æ—Ç–∞" - –ø–æ–∑–≤–æ–ª–∏—Ç —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å, –∞ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–¥–∞–∂ –ø–æ –≤–∞—à–µ–π –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π —Å—Å—ã–ª–∫–µ',
        )
        await bot.send_chat_action(chat_id=message.from_user.id, action='typing')
        await asyncio.sleep(5)
        # await bot.delete_message(chat_id=message.from_user.id, message_id=msg_1.message_id)

        msg_3 = await bot.send_message(
            chat_id=message.from_user.id,
            text='"–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π" - –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞—Ö –∏ —Ä–∞–±–æ—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã',
        )
        await bot.send_chat_action(chat_id=message.from_user.id, action='typing')
        await asyncio.sleep(5)
        # await bot.delete_message(chat_id=message.from_user.id, message_id=msg_2.message_id)

        msg_4 = await bot.send_message(
            chat_id=message.from_user.id,
            text='"–°—Å—ã–ª–∫–∞" - –æ—Ç–ø—Ä–∞–≤–∏–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—É—é –∫ –≤–∞–º, –∫–∞–∫ –∫ –ø–∞—Ä—Ç–Ω–µ—Ä—É\n\n–ö–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ –¥–µ–ª–∞–µ—Ç –ø–æ–∫—É–ø–∫—É –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ, –≤–∞–º –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ',
        )
        await bot.send_chat_action(chat_id=message.from_user.id, action='typing')
        await asyncio.sleep(5)
        # await bot.delete_message(chat_id=message.from_user.id, message_id=msg_3.message_id)

        msg_5 = await bot.send_message(
            chat_id=message.from_user.id,
            text='"–ú–µ–Ω–µ–¥–∂–µ—Ä" - –æ—Ç–ø—Ä–∞–≤–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤ —á–µ–º-—Ç–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –∏–ª–∏ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É',
        )
        await bot.send_chat_action(chat_id=message.from_user.id, action='typing')
        await asyncio.sleep(5)
        # await bot.delete_message(chat_id=message.from_user.id, message_id=msg_4.message_id)

        msg_6 = await bot.send_message(
            chat_id=message.from_user.id,
            text='–ê —Ç–∞–∫–∂–µ –±–æ—Ç –±—É–¥–µ—Ç —É–≤–µ–¥–æ–º–ª—è—Ç—å –≤–∞—Å –æ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö –≤ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –∏ –æ–±—É—á–µ–Ω–∏—è—Ö –ø–æ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞–º.\n\n–ù–∞–¥–µ—é—Å—å, —á—Ç–æ –Ω–∞—à–∞ —Ä–∞–±–æ—Ç–∞ –±—É–¥–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å—Å—è –¥–æ–ª–≥–æ –∏ –ø—Ä–∏–Ω–µ—Å–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–∂–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–æ –∏ –ø–æ–º–æ–∂–µ—Ç –ª—é–¥—è–º –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –ø—Ä–æ–±–ª–µ–º —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º',
        )
        await bot.send_chat_action(chat_id=message.from_user.id, action='typing')
        await asyncio.sleep(5)
        # await bot.delete_message(chat_id=message.from_user.id, message_id=msg_5.message_id)

        msg_7 = await bot.send_message(
            chat_id=message.from_user.id,
            text='–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–∏–Ω–∞—Ç—å —Ä–∞–±–æ—Ç—É',
        )
        await bot.send_chat_action(chat_id=message.from_user.id, action='typing')
        await asyncio.sleep(3)
        # await bot.delete_message(chat_id=message.from_user.id, message_id=msg_6.message_id)

        await bot.send_photo(
            chat_id=message.from_user.id,
            photo=FSInputFile('photos/main_menu.png'),
            caption="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¢–†–ê–î–û.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É:",
            reply_markup=main_kb
        )
    else:
        await bot.send_message(
            chat_id=message.from_user.id,
            text='–ü—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.\n\n–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è: https://www.tradoclub.ru/cooperation/register-as-club-member/\n\n–°—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –ø—Ä–æ–±–ª–µ–º–æ–π: https://forms.yandex.ru/u/6477620143f74f09d941514c/'
        )
        await state.clear()


@router.message()
async def default_answer(message: Message) -> None:
    if db.check_user_id_by_id(message.from_user.id):
        await bot.send_photo(
            chat_id=message.from_user.id,
            photo=FSInputFile('photos/main_menu.png'),
            caption='–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ–æ—Ä–º–æ–π "üë®‚Äçüíº –ú–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä - ‚úèÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ"',
            reply_markup=main_kb
        )


async def send_spam_1(bot: Bot = Bot(config.tg_bot.token)):
    clients_list = db.get_all_clients()
    for iteration in range(0, len(clients_list)):
        client_data_tuple = clients_list[iteration]
        if client_data_tuple[6] - datetime.now().timestamp() <= 0:
            photo = FSInputFile('photos/share_discount_rn.png')
            await bot.send_photo(
                chat_id=client_data_tuple[5],
                photo=photo,
                caption=f"–£–∂–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –Ω–∞–º–∏.\n\n–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏, –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∏—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –Ω–∞ –ª–∏—á–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è—Ö –∏–ª–∏ –≤ —Å–≤–æ–∏—Ö —Å–æ—Ü—Å–µ—Ç—è—Ö\n\n–°–∫–∏–¥–∫–∞ 10%: {client_data_tuple[2]}\n–°–∫–∏–¥–∫–∞ 25%: {client_data_tuple[3]}",
                reply_markup=main_kb
            )
            db.update_spam_1(client_data_tuple[1], datetime.now())


async def send_spam_2(bot: Bot = Bot(config.tg_bot.token)):
    clients_list = db.get_all_clients()
    for iteration in range(0, len(clients_list)):
        client_data_tuple = clients_list[iteration]
        if client_data_tuple[7] - datetime.now().timestamp() <= 0:
            photo = FSInputFile("photos/sells_up_30.png")
            await bot.send_photo(
                chat_id=client_data_tuple[5],
                photo=photo,
                caption=f"–£–≤–µ–ª–∏—á—å—Ç–µ —Å–≤–æ–∏ –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ 30%. –†–∞–∑–º–µ—Å—Ç–∏—Ç–µ –ø–æ—Å—Ç —Å –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π –¢–†–ê–î–û –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö –∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ 1000 —Ä—É–±–ª–µ–π –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –∑–∞ —Ä–µ–∫–ª–∞–º—É –ø—Ä–æ–¥—É–∫—Ç–∞. –£–∑–Ω–∞–π—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ —É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞",
                reply_markup=main_kb
            )
            db.update_spam_2(client_data_tuple[1], db.get_spam_1(client_data_tuple[1]))


async def send_spam_3(bot: Bot = Bot(config.tg_bot.token)):
    clients_list = db.get_all_clients()
    for iteration in range(0, len(clients_list)):
        client_data_tuple = clients_list[iteration]
        if client_data_tuple[8] - datetime.now().timestamp() <= 0:
            photo = FSInputFile("photos/base_knowledge.png")
            await bot.send_photo(
                chat_id=client_data_tuple[5],
                photo=photo,
                caption=f"–£–∑–Ω–∞–π—Ç–µ –Ω–æ–≤—É—é –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –¢–†–ê–î–û –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π:",
                reply_markup=main_kb
            )
            db.update_spam_3(client_data_tuple[1], db.get_spam_2(client_data_tuple[1]))

